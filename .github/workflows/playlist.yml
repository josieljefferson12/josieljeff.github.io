name: playlist.m3u

on:
  schedule:
    - cron: '1 00,12 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Cache de dependências pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Executar script de playlists
      run: python playlists.py

    - name: Adicionar timestamp nos arquivos
      run: |
        for file in $(find . -maxdepth 1 -type f -name "*.m3u" -o -name "*.xml.gz"); do
          echo "# Atualizado em $(TZ='America/Fortaleza' date '+%d/%m/%Y - %H:%M:%S') BRT" >> "$file"
        done

    - name: Verificar mudanças no Git
      id: git_status
      run: |
        if [[ -n "$(git status --porcelain .)" ]]; then
          echo "changes=true" >> $GITHUB_ENV
        else
          echo "changes=false" >> $GITHUB_ENV
        fi

    - name: Commit e push se houver mudanças
      if: env.changes == 'true'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Atualização automática dos arquivos baixados"
        git pull origin main --rebase
        git push origin main

    - name: Exibir arquivos finais
      run: ls -la

    - name: Notificar sucesso
      if: success()
      run: echo "Workflow executado com sucesso!"

    - name: Notificar falha
      if: failure()
      run: echo "Workflow falhou!"
